{
  "comments": [
    {
      "key": {
        "uuid": "ca902313_d9fb43b5",
        "filename": "hwaddrs/getmac.c",
        "patchSetId": 3
      },
      "lineNbr": 43,
      "author": {
        "id": 13028
      },
      "writtenOn": "2020-06-24T15:37:47Z",
      "side": 1,
      "message": "and why 20 then? why not e.g. 57?\nNeeds explanation and/or also the proper size. a mac is 17 characters + zero byte, so I\u0027d expect 18 here",
      "range": {
        "startLine": 43,
        "startChar": 15,
        "endLine": 43,
        "endChar": 61
      },
      "revId": "b4b28afccb64313f2204f7f3351bf0b70cdb6034",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d09c2aaa_d531dcbb",
        "filename": "hwaddrs/getmac.c",
        "patchSetId": 3
      },
      "lineNbr": 43,
      "author": {
        "id": 18177
      },
      "writtenOn": "2020-07-02T01:57:27Z",
      "side": 1,
      "message": "20 since exit(20\u003e18?1:0); results in a program returning what a shell considers a true value.\n\nThe MAC plus terminator (newline rather than 0 byte here) is 18 bytes, but if you\u0027re looking for junk off the end then you need to *try* reading more.",
      "parentUuid": "ca902313_d9fb43b5",
      "range": {
        "startLine": 43,
        "startChar": 15,
        "endLine": 43,
        "endChar": 61
      },
      "revId": "b4b28afccb64313f2204f7f3351bf0b70cdb6034",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5e5ff17a_450d25d3",
        "filename": "hwaddrs/getmac.c",
        "patchSetId": 3
      },
      "lineNbr": 65,
      "author": {
        "id": 13028
      },
      "writtenOn": "2020-06-24T15:37:47Z",
      "side": 1,
      "message": "magic number",
      "range": {
        "startLine": 65,
        "startChar": 23,
        "endLine": 65,
        "endChar": 25
      },
      "revId": "b4b28afccb64313f2204f7f3351bf0b70cdb6034",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "15f3d2a2_12513ff0",
        "filename": "hwaddrs/getmac.c",
        "patchSetId": 3
      },
      "lineNbr": 65,
      "author": {
        "id": 18177
      },
      "writtenOn": "2020-07-02T01:57:27Z",
      "side": 1,
      "message": "This entire section centers on a MAC address, such as \"01:23:45:67:89:AB\" being 17 characters.  There isn\u0027t really too much one can do to get rid of 17 being a known value.",
      "parentUuid": "5e5ff17a_450d25d3",
      "range": {
        "startLine": 65,
        "startChar": 23,
        "endLine": 65,
        "endChar": 25
      },
      "revId": "b4b28afccb64313f2204f7f3351bf0b70cdb6034",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2f2af915_1530ac68",
        "filename": "hwaddrs/getmac.c",
        "patchSetId": 3
      },
      "lineNbr": 65,
      "author": {
        "id": 13028
      },
      "writtenOn": "2020-07-03T09:46:56Z",
      "side": 1,
      "message": "#define MAC_LEN 17\n#define MAX_READ_CHARS (MAC_LEN + 1)\nif (read(checkfd, charbuf, sizeof(charbuf)) !\u003d MAX_READ_CHARS)\nand\nif (charbuf[MAC_LEN] !\u003d \u0027\\n\u0027) or whatever character you expect there\n\nwould be the suggested way of NOT handling with magic numbers in code",
      "parentUuid": "15f3d2a2_12513ff0",
      "range": {
        "startLine": 65,
        "startChar": 23,
        "endLine": 65,
        "endChar": 25
      },
      "revId": "b4b28afccb64313f2204f7f3351bf0b70cdb6034",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71",
      "unresolved": true
    }
  ]
}